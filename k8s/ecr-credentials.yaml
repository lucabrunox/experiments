# Cron job to update ECR credentials

apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-credentials-helper-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: ecr-credentials-helper-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["ecrsecret"] # Replace with your desired ECR token secret name
    verbs: ["delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ecr-credentials-helper-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: ecr-credentials-helper-sa
    namespace: default
    apiGroup: ""
roleRef:
  kind: Role
  name: ecr-credentials-helper-role
  apiGroup: ""
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-credentials-helper
  namespace: default
spec:
  schedule: "* * * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          hostNetwork: true
          serviceAccountName: ecr-credentials-helper-sa
          containers:
            - name: ecr-credentials-helper
              image: public.ecr.aws/aws-cli/aws-cli:2.17.58
              imagePullPolicy: IfNotPresent
              command:
                - /bin/bash
                - -c
                - |-
                  set -e
                  export AWS_DEFAULT_REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)
                  export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
                  ECR_TOKEN="$(aws ecr get-login-password)"
                  curl -LO https://dl.k8s.io/release/v1.29.0/bin/linux/arm64/kubectl
                  chmod +x kubectl
                  mv kubectl /usr/bin/
                  kubectl delete secret --ignore-not-found ecrsecret -n default
                  kubectl create secret docker-registry ecrsecret --docker-server=https://${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com --docker-username=AWS --docker-password=${ECR_TOKEN} --namespace=default
          restartPolicy: Never